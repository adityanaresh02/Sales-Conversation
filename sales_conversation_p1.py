# -*- coding: utf-8 -*-
"""Sales Conversation_P1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nasJqR9O-ng1EWux_JWKQSkFteBhGhoT
"""

import csv
import random
import time
from transformers import pipeline

# Set up the language model
generator = pipeline('text-generation', model='bert-base-uncased')

# Define the products and services
products = ['Smartphone', 'Laptop', 'TV', 'Smartwatch', 'Headphones']
services = ['Warranty', 'Insurance', 'Technical Support', 'Maintenance']

# Define the sales conversation structure
conversation_structure = [
    {'type': 'greeting', 'prompt': 'Hello! How can I assist you today?'},
    {'type': 'product_inquiry', 'prompt': 'What can you tell me about the {}?'},
    {'type': 'feature_highlight', 'prompt': 'One of the key features of the {} is its {}.'},
    {'type': 'price_inquiry', 'prompt': 'How much does the {} cost?'},
    {'type': 'service_offer', 'prompt': 'Would you like to add {} to your purchase?'},
    {'type': 'closing', 'prompt': 'Thank you for your purchase!'}
]

# Define the sales conversation dataset
dataset = []

# Generate conversations
for i in range(100):
    salesman = f'Salesman {i+1}'
    user = f'User {i+1}'
    timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())
    product = random.choice(products)
    service = random.choice(services)
    conversation = []

    for structure in conversation_structure:
        if structure['type'] == 'greeting':
            response = generator(structure['prompt'], max_length=50, num_return_sequences=1)[0]['generated_text']
        elif structure['type'] == 'product_inquiry':
            response = generator(structure['prompt'].format(product), max_length=50, num_return_sequences=1)[0]['generated_text']
        elif structure['type'] == 'feature_highlight':
            feature = random.choice(['camera', 'processor', 'display', 'battery'])
            response = generator(structure['prompt'].format(product, feature), max_length=50, num_return_sequences=1)[0]['generated_text']
        elif structure['type'] == 'price_inquiry':
            price = random.randint(100, 1000)
            response = generator(structure['prompt'].format(product), max_length=50, num_return_sequences=1)[0]['generated_text'] + f' The price is ${price}.'
        elif structure['type'] == 'service_offer':
            response = generator(structure['prompt'].format(service), max_length=50, num_return_sequences=1)[0]['generated_text']
        elif structure['type'] == 'closing':
            response = generator(structure['prompt'], max_length=50, num_return_sequences=1)[0]['generated_text']

        conversation.append({'Salesman': salesman, 'User': user, 'TimeStamp': timestamp, 'Product': product, 'Service': service, 'Response': response})

    dataset.extend(conversation)

# Write the dataset to a CSV file
with open('sales_conversation_dataset.csv', 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(['Salesman', 'User', 'TimeStamp', 'Product', 'Service', 'Response'])
    writer.writerows(dataset)
